#!/bin/sh

set -e

source `dirname $0`/../configs.sh

if [ "$AWS_ID" == "" ]; then
  echo "must set AWS_ID"
  exit 1
fi

if [ "$AWS_SECRET" == "" ]; then
  echo "must set AWS_SECRET"
  exit 1
fi

if [ "$S3_BUCKET" == "" ]; then
  echo "must set S3_BUCKET"
  exit 1
fi

echo "restarting vulcan app"
heroku restart --app $VULCAN_HEROKU_APP_NAME
sleep 5

basedir="$( cd -P "$( dirname "$0" )" && pwd )"

# make a temp directory
tempdir="$( mktemp -t imagemagick_XXXX )"
rm -rf $tempdir
mkdir -p $tempdir
cd $tempdir

echo ">>> Downloading libpng sources"

libpng_sources=$tempdir/libpng-${LIBPNG_VERSION}.tar.gz
curl "http://f.cl.ly/items/060P421e2Q3S3A0s2j3l/libpng-${LIBPNG_VERSION}.tar.gz" > $libpng_sources

tar -C $tempdir -x -z -f $libpng_sources

echo ">>> Building libpng"

libpng_local_path=$tempdir/libpng-${LIBPNG_VERSION}.tgz

# build and package libpng for heroku
vulcan build -v \
  -s $tempdir/libpng-${LIBPNG_VERSION} \
  -n libpng\
  -o $libpng_local_path

# -c "cd libpng-${LIBPNG_VERSION} && ./configure --prefix=/app/vendor/libpng && make install" \

echo ">>> Uploading libpng artifact"
echo "    to ${S3_BUCKET}/${LIBPNG_REMOTE_PATH}"
echo "    from ${libpng_local_path}"

$basedir/aws/s3 put $S3_BUCKET $LIBPNG_REMOTE_PATH $libpng_local_path

#####  NOTE restart heroku app or it will crash:   heroku restart --app <your_app_name>
echo "restarting vulcan app"
heroku restart --app $VULCAN_HEROKU_APP_NAME
sleep 5

## >>>> Download, build and upload libwebp to s3 
libwebp_local_path=$tempdir/libwebp-${LIBWEBP_VERSION}.tgz

echo ">>> Downloading libwebp sources"

libwebp_sources=$tempdir/libwebp-${LIBWEBP_VERSION}.tar.gz
curl "http://f.cl.ly/items/1M3g2H0b3R3R1F3X3x2G/libwebp-${LIBWEBP_VERSION}.tar.gz" > $libwebp_sources

tar -C $tempdir -x -z -f $libwebp_sources

echo ">>> Building libwebp"

# build and package libwebp for heroku
vulcan build -v \
  -s $tempdir/libwebp-${LIBWEBP_VERSION} \
  -n libpwebp\
  -o $libwebp_local_path

echo ">>> Uploading libwebp artifact"
echo "    to ${S3_BUCKET}/${LIBWEBP_REMOTE_PATH}"
echo "    from ${libwebp_local_path}"

$basedir/aws/s3 put $S3_BUCKET $LIBWEBP_REMOTE_PATH $libwebp_local_path

#####  NOTE restart heroku app or it will crash:   heroku restart --app <your_app_name>
echo "restarting vulcan app"
heroku restart --app $VULCAN_HEROKU_APP_NAME
sleep 5


## >>>> Download, build and upload ImageMagick to s3
echo ">>> Downloading imagemagick sources"


im_local_path=$tempdir/ImageMagick-${IMAGE_MAGICK_VERSION}.tgz

im_sources=$tempdir/ImageMagick-${IMAGE_MAGICK_VERSION}.tar.gz
curl "http://f.cl.ly/items/1W241x3R452v3p1q0M3d/ImageMagick-${IMAGE_MAGICK_VERSION}.tar.gz" > $im_sources

tar -C $tempdir -x -z -f $im_sources
rm $im_sources
mv $tempdir/ImageMagick-* $tempdir/ImageMagick-$IMAGE_MAGICK_VERSION

echo ">>> Building imagemagick"

# build and package imagemagick for heroku
vulcan build -v \
  -s "${tempdir}/ImageMagick-${IMAGE_MAGICK_VERSION}" \
  -n imagemagick \
  -o $im_local_path \
  --deps "http://s3.amazonaws.com/my-heroku-buildpack-imagemagick/libpng-1.6.9.tgz" "https://s3.amazonaws.com/my-heroku-buildpack-imagemagick/libwebp-0.3.1.tgz"

#  -c "cd ImageMagick-${IMAGE_MAGICK_VERSION} && ./configure --prefix=/app/vendor/imagemagick && make install" \
#  --deps $LIBPNG_REMOTE_PATH $LIBWEBP_REMOTE_PATH  
 
#"http://s3.amazonaws.com/my-heroku-buildpack-imagemagick/libpng-1.6.9.tgz" "https://s3.amazonaws.com/my-heroku-buildpack-imagemagick/libwebp-0.3.1.tgz"


#-c "cd ImageMagick-${IMAGE_MAGICK_VERSION} && ./configure --prefix=/app/vendor/imagemagick && make install" \

echo ">>> Uploading image magick artifact"
echo "    to ${S3_BUCKET}/${REMOTE_PATH}"
echo "    from ${im_local_path}"

$basedir/aws/s3 put $S3_BUCKET $REMOTE_PATH $im_local_path
